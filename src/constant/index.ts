import React from "react";

export const EVENTS = {
    broadcastToUI: 'broadcastToUI',
    broadcastToBackground: 'broadcastToBackground',
    TX_COMPLETED: 'TX_COMPLETED',
    SIGN_FINISHED: 'SIGN_FINISHED',
    TX_SUBMITTING: 'TX_SUBMITTING',
    WALLETCONNECT: {
        STATUS_CHANGED: 'WALLETCONNECT_STATUS_CHANGED',
        SESSION_STATUS_CHANGED: 'SESSION_STATUS_CHANGED',
        SESSION_ACCOUNT_CHANGED: 'SESSION_ACCOUNT_CHANGED',
        SESSION_NETWORK_DELAY: 'SESSION_NETWORK_DELAY',
        INIT: 'WALLETCONNECT_INIT',
        INITED: 'WALLETCONNECT_INITED',
        TRANSPORT_ERROR: 'TRANSPORT_ERROR',
        SCAN_ACCOUNT: 'SCAN_ACCOUNT'
    },
    GNOSIS: {
        TX_BUILT: 'TransactionBuilt',
        TX_CONFIRMED: 'TransactionConfirmed'
    },
    QRHARDWARE: {
        ACQUIRE_MEMSTORE_SUCCEED: 'ACQUIRE_MEMSTORE_SUCCEED'
    },
    LEDGER: {
        REJECTED: 'LEDGER_REJECTED',
        REJECT_APPROVAL: 'LEDGER_REJECT_APPROVAL'
    },
    COMMON_HARDWARE: {
        REJECTED: 'COMMON_HARDWARE_REJECTED'
    },
    LOCK_WALLET: 'LOCK_WALLET',
    RELOAD_TX: 'RELOAD_TX',
    SIGN_BEGIN: 'SIGN_BEGIN',
    SIGN_WAITING_AMOUNTED: 'SIGN_WAITING_AMOUNTED'
    // FORCE_EXPIRE_ADDRESS_BALANCE: 'FORCE_EXPIRE_ADDRESS_BALANCE',
};

export const KEYRING_CLASS = {
    PRIVATE_KEY: 'Simple Key Pair',
    MNEMONIC: 'HD Key Tree',
    HARDWARE: {
        BITBOX02: 'BitBox02 Hardware',
        TREZOR: 'Trezor Hardware',
        LEDGER: 'Ledger Hardware',
        ONEKEY: 'Onekey Hardware',
        GRIDPLUS: 'GridPlus Hardware',
        KEYSTONE: 'QR Hardware Wallet Device',
        IMKEY: 'imKey Hardware'
    },
    WATCH: 'Watch Address',
    WALLETCONNECT: 'WalletConnect',
    GNOSIS: 'Gnosis',
    CoboArgus: 'CoboArgus',
    Coinbase: 'Coinbase'
} as const;

export const KEYRING_TYPE = {
    HdKeyring: 'HD Key Tree',
    SimpleKeyring: 'Simple Key Pair',
    HardwareKeyring: 'hardware',
    WatchAddressKeyring: 'Watch Address',
    WalletConnectKeyring: 'WalletConnect',
    GnosisKeyring: 'Gnosis',
    CoboArgusKeyring: 'CoboArgus',
    CoinbaseKeyring: 'Coinbase'
} as const;

export enum WALLET_BRAND_TYPES {
    AMBER = 'AMBER',
    BITBOX02 = 'BITBOX02',
    COBO = 'COBO',
    FIREBLOCKS = 'FIREBLOCKS',
    IMTOKEN = 'IMTOKEN',
    JADE = 'JADE',
    LEDGER = 'LEDGER',
    MATHWALLET = 'MATHWALLET',
    ONEKEY = 'ONEKEY',
    TP = 'TP',
    TREZOR = 'TREZOR',
    TRUSTWALLET = 'TRUSTWALLET',
    GNOSIS = 'Gnosis',
    GRIDPLUS = 'GRIDPLUS',
    METAMASK = 'MetaMask',
    KEYSTONE = 'Keystone',
    COOLWALLET = 'CoolWallet',
    DEFIANT = 'Defiant',
    WALLETCONNECT = 'WALLETCONNECT',
    AIRGAP = 'AirGap',
    IMTOKENOFFLINE = 'imTokenOffline',
    Rainbow = 'Rainbow',
    Bitkeep = 'Bitget',
    // Uniswap = 'Uniswap',
    Zerion = 'Zerion',
    CoboArgus = 'CoboArgus',
    MPCVault = 'MPCVault',
    Coinbase = 'Coinbase',
    IMKEY = 'IMKEY',
    Utila = 'Utila',
}

export enum BRAND_WALLET_CONNECT_TYPE {
    WalletConnect = 'WalletConnect',
    BitBox02Connect = 'BitBox02Connect',
    LedgerConnect = 'LedgerConnect',
    OneKeyConnect = 'OneKeyConnect',
    TrezorConnect = 'TrezorConnect',
    GnosisConnect = 'GnosisConnect',
    GridPlusConnect = 'GridPlusConnect',
    QRCodeBase = 'QR Hardware Wallet Device',
    CoboArgusConnect = 'CoboArgusConnect',
    CoinbaseConnect = 'CoinbaseConnect',
    ImKeyConnect = 'ImKeyConnect',
}

export enum WALLET_BRAND_CATEGORY {
    MOBILE = 'mobile',
    HARDWARE = 'hardware',
    INSTITUTIONAL = 'institutional',
}

export type ThemeIconType = string | React.FC<React.SVGProps<SVGSVGElement>>;

export type IWalletBrandContent = {
    id: number;
    name: string;
    brand: WALLET_BRAND_TYPES;
    icon: string;
    lightIcon: string;
    image: string;
    rcSvg: Exclude<ThemeIconType, string>;
    /**
     * @description some brand's logo has no dark mode svg because it's colorful,
     * for those brand, we use lightIcon as dark mode svg. When maybeSvg provided
     * for those brand, we set maybeSvg as image string and `ThemeIcon` would rendered
     * as <img />.
     */
    maybeSvg?: ThemeIconType;
    connectType: BRAND_WALLET_CONNECT_TYPE;
    category: WALLET_BRAND_CATEGORY;
    hidden?: boolean;
};

export const WALLET_BRAND_CONTENT: {
    [K in string]: IWalletBrandContent;
} = {
    [WALLET_BRAND_TYPES.AMBER]: {
        id: 0,
        name: 'Amber',
        brand: WALLET_BRAND_TYPES.AMBER,
        icon: IconAmber,
        lightIcon: IconAmber,
        image: LogoAmber,
        rcSvg: RcLogoAmber,
        maybeSvg: LogoAmber,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.INSTITUTIONAL,
    },
    [WALLET_BRAND_TYPES.BITBOX02]: {
        id: 10,
        name: 'BitBox02',
        brand: WALLET_BRAND_TYPES.BITBOX02,
        icon: IconBitBox02,
        lightIcon: IconBitBox02,
        image: IconBitBox02WithBorder,
        rcSvg: RcIconBitBox02WithBorder,
        maybeSvg: IconBitBox02WithBorder,
        connectType: BRAND_WALLET_CONNECT_TYPE.BitBox02Connect,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.COBO]: {
        id: 1,
        name: 'Cobo Wallet',
        brand: WALLET_BRAND_TYPES.COBO,
        icon: IconCobo,
        lightIcon: IconCobo,
        image: LogoCobo,
        rcSvg: RcLogoCobo,
        maybeSvg: LogoCobo,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.INSTITUTIONAL,
        hidden: true,
    },
    [WALLET_BRAND_TYPES.COOLWALLET]: {
        id: 16,
        name: 'CoolWallet',
        brand: WALLET_BRAND_TYPES.COOLWALLET,
        icon: LogoCoolWallet,
        lightIcon: LogoCoolWallet,
        image: LogoCoolWallet,
        rcSvg: RcLogoCoolWallet,
        maybeSvg: LogoCoolWallet,
        connectType: BRAND_WALLET_CONNECT_TYPE.QRCodeBase,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.DEFIANT]: {
        id: 17,
        name: 'Defiant',
        brand: WALLET_BRAND_TYPES.DEFIANT,
        icon: LogoDefiant,
        lightIcon: LogoDefiant,
        image: LogoDefiantWhite,
        rcSvg: RcLogoDefiantWhite,
        maybeSvg: LogoDefiantWhite,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
        hidden: true,
    },
    [WALLET_BRAND_TYPES.WALLETCONNECT]: {
        id: 20,
        name: 'Wallet Connect',
        brand: WALLET_BRAND_TYPES.WALLETCONNECT,
        icon: LogoWalletConnect,
        lightIcon: LogoWalletConnect,
        image: LogoWalletConnectWhite,
        rcSvg: RcLogoWalletConnectWhite,
        maybeSvg: LogoWalletConnectWhite,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.FIREBLOCKS]: {
        id: 11,
        name: 'Fireblocks',
        brand: WALLET_BRAND_TYPES.FIREBLOCKS,
        icon: IconFireblocks,
        lightIcon: IconFireblocks,
        image: IconFireblocksWithBorder,
        rcSvg: RcIconFireblocksWithBorder,
        maybeSvg: IconFireblocksWithBorder,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.INSTITUTIONAL,
    },
    [WALLET_BRAND_TYPES.GNOSIS]: {
        id: 13,
        name: 'Safe',
        brand: WALLET_BRAND_TYPES.GNOSIS,
        icon: IconGnosis,
        lightIcon: IconGnosis,
        image: IconGnosis,
        rcSvg: RcIconGnosis,
        maybeSvg: IconGnosis,
        connectType: BRAND_WALLET_CONNECT_TYPE.GnosisConnect,
        category: WALLET_BRAND_CATEGORY.INSTITUTIONAL,
    },
    [WALLET_BRAND_TYPES.GRIDPLUS]: {
        id: 12,
        name: 'GridPlus',
        brand: WALLET_BRAND_TYPES.GRIDPLUS,
        icon: IconGridPlus,
        lightIcon: IconGridPlus,
        image: IconGridPlus,
        rcSvg: RcIconGridPlus,
        maybeSvg: IconGridPlus,
        connectType: BRAND_WALLET_CONNECT_TYPE.GridPlusConnect,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.IMTOKEN]: {
        id: 2,
        name: 'imToken',
        brand: WALLET_BRAND_TYPES.IMTOKEN,
        icon: IconImtoken,
        lightIcon: IconImtoken,
        image: LogoImtoken,
        rcSvg: RcLogoImtoken,
        maybeSvg: LogoImtoken,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.JADE]: {
        id: 3,
        name: 'Jade Wallet',
        brand: WALLET_BRAND_TYPES.JADE,
        icon: IconJade,
        lightIcon: IconJade,
        image: LogoJade,
        rcSvg: RcLogoJade,
        maybeSvg: LogoJade,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.INSTITUTIONAL,
    },
    [WALLET_BRAND_TYPES.KEYSTONE]: {
        id: 15,
        name: 'Keystone',
        brand: WALLET_BRAND_TYPES.KEYSTONE,
        icon: LogoKeystone,
        lightIcon: LogoKeystone,
        image: LogoKeystone,
        rcSvg: RcLogoKeystone,
        maybeSvg: LogoKeystone,
        connectType: BRAND_WALLET_CONNECT_TYPE.QRCodeBase,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.AIRGAP]: {
        id: 18,
        name: 'AirGap Vault',
        brand: WALLET_BRAND_TYPES.AIRGAP,
        icon: LogoAirGap,
        lightIcon: LogoAirGap,
        image: LogoAirGap,
        rcSvg: RcLogoAirGap,
        maybeSvg: LogoAirGap,
        connectType: BRAND_WALLET_CONNECT_TYPE.QRCodeBase,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.LEDGER]: {
        id: 4,
        name: 'Ledger',
        brand: WALLET_BRAND_TYPES.LEDGER,
        icon: LogoLedgerWhite,
        lightIcon: LogoLedgerWhite,
        image: LogoLedgerDark,
        rcSvg: RcLogoLedgerDark,
        maybeSvg: LogoLedgerDark,
        connectType: BRAND_WALLET_CONNECT_TYPE.LedgerConnect,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.MATHWALLET]: {
        id: 5,
        name: 'Math Wallet',
        brand: WALLET_BRAND_TYPES.MATHWALLET,
        icon: IconMath,
        lightIcon: IconMath,
        image: LogoMath,
        rcSvg: RcLogoMath,
        maybeSvg: LogoMath,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.METAMASK]: {
        id: 14,
        name: 'MetaMask Mobile',
        brand: WALLET_BRAND_TYPES.METAMASK,
        icon: IconMetaMask,
        lightIcon: IconMetaMask,
        image: IconMetaMask,
        rcSvg: RcIconMetaMask,
        maybeSvg: RcIconMetaMask,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.ONEKEY]: {
        id: 6,
        name: 'OneKey',
        brand: WALLET_BRAND_TYPES.ONEKEY,
        icon: IconOnekey,
        lightIcon: IconOnekey,
        image: LogoOnekey,
        rcSvg: RcLogoOnekey,
        maybeSvg: LogoOnekey,
        connectType: BRAND_WALLET_CONNECT_TYPE.OneKeyConnect,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.TP]: {
        id: 7,
        name: 'TokenPocket',
        brand: WALLET_BRAND_TYPES.TP,
        icon: IconTokenpocket,
        lightIcon: IconTokenpocket,
        image: LogoTp,
        rcSvg: RcLogoTp,
        maybeSvg: LogoTp,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.TREZOR]: {
        id: 8,
        name: 'Trezor',
        brand: WALLET_BRAND_TYPES.TREZOR,
        icon: IconTrezor,
        lightIcon: IconTrezor,
        image: LogoTrezor,
        rcSvg: RcLogoTrezor,
        maybeSvg: LogoTrezor,
        connectType: BRAND_WALLET_CONNECT_TYPE.TrezorConnect,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.TRUSTWALLET]: {
        id: 9,
        name: 'Trust Wallet',
        brand: WALLET_BRAND_TYPES.TRUSTWALLET,
        icon: IconTrust,
        lightIcon: IconTrust,
        image: LogoTrust,
        rcSvg: RcLogoTrust,
        maybeSvg: LogoTrust,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.Rainbow]: {
        id: 21,
        name: 'Rainbow',
        brand: WALLET_BRAND_TYPES.Rainbow,
        icon: LogoRainbow,
        lightIcon: LogoRainbow,
        image: LogoRainbow,
        rcSvg: RcLogoRainbow,
        maybeSvg: LogoRainbow,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.Bitkeep]: {
        id: 22,
        name: 'Bitget Wallet',
        brand: WALLET_BRAND_TYPES.Bitkeep,
        icon: LogoBitkeep,
        lightIcon: LogoBitkeep,
        image: LogoBitkeep,
        rcSvg: RcLogoBitkeep,
        maybeSvg: LogoBitkeep,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.Zerion]: {
        id: 23,
        name: 'Zerion Wallet',
        brand: WALLET_BRAND_TYPES.Zerion,
        icon: LogoZerion,
        lightIcon: LogoZerion,
        image: LogoZerion,
        rcSvg: RcLogoZerion,
        maybeSvg: LogoZerion,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    // [WALLET_BRAND_TYPES.Uniswap]: {
    //   id: 24,
    //   name: 'Uniswap Wallet',
    //   brand: WALLET_BRAND_TYPES.Uniswap,
    //   icon: LogoUniswap,
    //   image: LogoUniswap,
    //   connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
    //   category: WALLET_BRAND_CATEGORY.MOBILE,
    // },
    [WALLET_BRAND_TYPES.CoboArgus]: {
        id: 25,
        name: 'Cobo Argus',
        brand: WALLET_BRAND_TYPES.CoboArgus,
        icon: LogoCoboArgus,
        lightIcon: LogoCoboArgus,
        image: LogoCoboArgus,
        rcSvg: RcLogoCoboArgus,
        maybeSvg: LogoCoboArgus,
        connectType: BRAND_WALLET_CONNECT_TYPE.CoboArgusConnect,
        category: WALLET_BRAND_CATEGORY.INSTITUTIONAL,
    },
    [WALLET_BRAND_TYPES.MPCVault]: {
        id: 26,
        name: 'MPCVault',
        brand: WALLET_BRAND_TYPES.MPCVault,
        icon: LogoMPCVault,
        lightIcon: LogoMPCVault,
        image: LogoMPCVault,
        rcSvg: RcLogoMPCVault,
        maybeSvg: LogoMPCVault,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.INSTITUTIONAL,
    },
    [WALLET_BRAND_TYPES.IMTOKENOFFLINE]: {
        id: 27,
        name: 'imToken',
        brand: WALLET_BRAND_TYPES.IMTOKENOFFLINE,
        icon: LogoImtokenOffline,
        lightIcon: LogoImtokenOffline,
        image: LogoImtokenOffline,
        rcSvg: RcLogoImtokenOffline,
        maybeSvg: LogoImtokenOffline,
        connectType: BRAND_WALLET_CONNECT_TYPE.QRCodeBase,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.Coinbase]: {
        id: 28,
        name: 'Coinbase',
        brand: WALLET_BRAND_TYPES.Coinbase,
        lightIcon: IconCoinbase,
        icon: IconCoinbase,
        image: IconCoinbase,
        rcSvg: RCIconCoinbase,
        connectType: BRAND_WALLET_CONNECT_TYPE.CoinbaseConnect,
        category: WALLET_BRAND_CATEGORY.MOBILE,
    },
    [WALLET_BRAND_TYPES.IMKEY]: {
        id: 29,
        name: 'imKey',
        brand: WALLET_BRAND_TYPES.IMKEY,
        icon: IconImKey,
        lightIcon: IconImKey,
        image: IconImKey,
        rcSvg: RCIconImKey,
        maybeSvg: IconImKey,
        connectType: BRAND_WALLET_CONNECT_TYPE.ImKeyConnect,
        category: WALLET_BRAND_CATEGORY.HARDWARE,
    },
    [WALLET_BRAND_TYPES.Utila]: {
        id: 30,
        name: 'Utila',
        brand: WALLET_BRAND_TYPES.Utila,
        icon: IconUtila,
        lightIcon: IconUtila,
        image: IconUtila,
        rcSvg: RCIconUtila,
        connectType: BRAND_WALLET_CONNECT_TYPE.WalletConnect,
        category: WALLET_BRAND_CATEGORY.INSTITUTIONAL,
    },
};

export const BRAND_ALIAN_TYPE_TEXT = {
    [KEYRING_TYPE.HdKeyring]: 'Seed Phrase',
    [KEYRING_TYPE.SimpleKeyring]: 'Private Key',
    [KEYRING_TYPE.WatchAddressKeyring]: 'Contact',
    [KEYRING_CLASS.HARDWARE.LEDGER]: 'Ledger',
    [KEYRING_CLASS.HARDWARE.TREZOR]: 'Trezor',
    [KEYRING_CLASS.HARDWARE.ONEKEY]: 'Onekey',
    [KEYRING_CLASS.HARDWARE.BITBOX02]: 'BitBox02',
    [KEYRING_CLASS.GNOSIS]: 'Safe',
    [KEYRING_CLASS.HARDWARE.GRIDPLUS]: 'GridPlus',
    [KEYRING_CLASS.HARDWARE.KEYSTONE]: 'Keystone',
    [WALLET_BRAND_TYPES.TP]: WALLET_BRAND_CONTENT.TP.name,
    [WALLET_BRAND_TYPES.METAMASK]: WALLET_BRAND_CONTENT.MetaMask.name,
    [WALLET_BRAND_TYPES.IMTOKEN]: WALLET_BRAND_CONTENT.IMTOKEN.name,
    [WALLET_BRAND_TYPES.MATHWALLET]: WALLET_BRAND_CONTENT.MATHWALLET.name,
    [WALLET_BRAND_TYPES.TRUSTWALLET]: WALLET_BRAND_CONTENT.TRUSTWALLET.name,
    [KEYRING_CLASS.Coinbase]: WALLET_BRAND_CONTENT.Coinbase.name,
    [KEYRING_CLASS.HARDWARE.IMKEY]: 'imKey',
};